/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.github.ibara1454.effect

import java.io.ByteArrayOutputStream
import java.io.PrintStream
import kotlin.test.*

class EffectTest {
    private val outputBuffer = ByteArrayOutputStream()
    private lateinit var originOut: PrintStream

    @BeforeTest
    fun setUp() {
        // Mocks the standard output
        originOut = System.out
        System.setOut(
            PrintStream(outputBuffer, true, Charsets.UTF_8.displayName())
        )
    }

    @AfterTest
    fun tearDown() {
        System.setOut(originOut)
    }

    /**
     * This test case shows the usage [effect] function.
     */
    @Test
    fun testLogExample1() {
        // Write a `log` function to print the result of any given function
        fun <T> log(f: () -> T): T {
            return effect({ x -> print("$x") }, f)
        }
        // The simple `add` function (with log of the result)
        fun add(x: Int, y: Int): Int = log {
            x + y
        }
        // Assert the result of add function
        val result = add(1, 2)
        assertEquals(expected = 3, actual = result)
        // Assert the log
        val output = outputBuffer.toByteArray().toString(Charsets.UTF_8)
        assertEquals(expected = "3", actual = output)
    }

    /**
     * Another usage of [effect] function.
     */
    @Test
    fun testLogExample2() {
        // Use `effect` function directly
        val result = effect(::print) {
            1 + 2
        }
        // Assert the result of add function
        assertEquals(expected = 3, actual = result)
        // Assert the log
        val output = outputBuffer.toByteArray().toString(Charsets.UTF_8)
        assertEquals(expected = "3", actual = output)
    }
}
